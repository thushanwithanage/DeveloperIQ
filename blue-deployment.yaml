apiVersion: apps/v1
kind: Deployment
metadata:
  name: created-issues-microservice-blue
  namespace: blue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservices-blue
  template:
    metadata:
      labels:
        app: microservices-blue
    spec:
      containers:
        - name: created-issues-microservice
          image: ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/created_issues_instance:latest
          ports:
            - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: closed-issues-microservice-blue
  namespace: blue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservices-blue
  template:
    metadata:
      labels:
        app: microservices-blue
    spec:
      containers:
        - name: closed-issues-microservice
          image: ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/closed_issues_instance:latest
          ports:
            - containerPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: created-commits-microservice-blue
  namespace: blue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservices-blue
  template:
    metadata:
      labels:
        app: microservices-blue
    spec:
      containers:
        - name: created-commits-microservice
          image: ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/created_commits_instance:latest
          ports:
            - containerPort: 8083
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: created-prs-microservice-blue
  namespace: blue
spec:
  replicas: 2
  selector:
    matchLabels:
      app: microservices-blue
  template:
    metadata:
      labels:
        app: microservices-blue
    spec:
      containers:
        - name: created-prs-microservice
          image: ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/created_prs_instance:latest
          ports:
            - containerPort: 8084