name: DeveloperIQ
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Github Microservice Docker image
      run: |
        #docker build -t github_microservice_image github_microservice/
        #docker tag github_microservice_image:latest ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/github_instance:latest
        #docker push ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/github_instance:latest
    - name: Build and Push Database Microservice Docker image
      run: |
        #docker build -t database_microservice_image database_microservice/
        #docker tag database_microservice_image:latest ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/database_instance:latest
        #docker push ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/database_instance:latest
    - name: Build and Push Main Microservice Docker image
      run: |
        #docker build -t main_microservice_image main_microservice/
        #docker tag main_microservice_image:latest ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/main_instance:latest
        #docker push ${{ secrets.AWS_INSTANCE_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/main_instance:latest

    - name: Update kube config
      #run: aws eks update-kubeconfig --name cluster1

    - name: Deploy to EKS
      run: |
        #kubectl apply -f deployment.yaml
        #kubectl apply -f service.yaml
